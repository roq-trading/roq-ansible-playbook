---

##############
### DEBIAN ###
##############

# https://stackoverflow.com/questions/42695004/importerror-no-module-named-ssl-match-hostname-when-importing-the-docker-sdk-fo

- block:

  - name: pip remove backports.ssl-match-hostname (compatibility)
    pip:
      name: "backports.ssl-match-hostname"
      state: absent

  - name: install python-backports.ssl-match-hostname (compatibility)
    apt:
      name: "python-backports.ssl-match-hostname"
      state: present

  when: ansible_os_family == "Debian" and ansible_distribution_release == "buster" and become_user is defined
  become: true
  tags:
    - docker

# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04
# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04
# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04

- block:

  - name: install dependencies
    apt:
      name:
        - "apt-transport-https"
        - "ca-certificates"
        - "curl"
        - "gnupg2"
        - "software-properties-common"
      state: present

  - name: add docker gpg key
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      state: present

  - name: find distribution version
    command: "/usr/bin/lsb_release -cs"
    register: ubuntu_version
    changed_when: false

  - name: get distribution name
    set_fact: 
      distribution: "{{ ansible_distribution | lower }}"

  - name: add docker repository
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/{{ distribution }} {{ ubuntu_version.stdout }} stable"
      state: present

  - name: install docker-ce
    apt:
      name: "docker-ce"
      update_cache: yes
    register: docker_ce_install
    notify:
    - restart docker

  when: ansible_os_family == "Debian" and become_user is defined
  become: true
  tags:
    - docker


##############
### REDHAT ###
##############

# https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce

- block:

  - name: install dependencies
    yum:
      name:
        - "yum-utils"
        - "device-mapper-persistent-data"
        - "lvm2"
        - "container-selinux"
      state: present

#  # Docker for Centos - Install Instructions Causing Conflicts: https://github.com/docker/for-linux/issues/299
#
#  - name: download container-selinux
#    get_url:
#      url: "http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.74-1.el7.noarch.rpm"
#      dest: "{{ root }}/opt"
#      mode: 0644
#    when: install_container_selinux == true
#
#  - name: install container-selinux
#    yum:
#      name: "{{ root }}/opt/container-selinux-2.74-1.el7.noarch.rpm"
#      state: present
#    when: install_container_selinux == true

  - name: add docker gpg key
    rpm_key:
      key: "https://download.docker.com/linux/centos/gpg"
      state: present

  - name: add docker-ce repo
    get_url:
      url: "https://download.docker.com/linux/centos/docker-ce.repo"
      dest: "/etc/yum.repos.d/docker-ce.repo"
      force: yes
      owner: root
      group: root
      mode: 0644

  - name: install docker-ce
    yum:
      name: "docker-ce"
      state: present
      update_cache: yes
    register: docker_ce_install
    notify:
    - restart docker

  when: ansible_os_family == "RedHat" and become_user is defined
  become: true
  tags:
    - docker


##############
### COMMON ###
##############

- block:

  - name: start docker
    service:
      name: docker
      state: started
    when: docker_ce_install.changed

  - name: pip remove docker-py
    pip:
      name: "docker-py"
      state: absent

  - name: pip install docker
    pip:
      name: "docker"
      state: latest

  - name: initialize swarm
    docker_swarm:
      state: present
      advertise_addr: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

# TODO(thraneh): use docker_network when this is fixed: https://github.com/ansible/ansible/issues/28380
#  - name: create roq network
#    docker_network:
#      name: "roq-network"
#      driver: "overlay"

  - name: test if roq network exists
    shell: "docker network inspect roq-network"
    register: roq_network_exists
    failed_when: roq_network_exists.rc < 0 or roq_network_exists.rc > 1
    changed_when: false

  - name: create roq network
    shell: "docker network create --driver overlay --attachable roq-network"
    when: roq_network_exists.rc == 1

  when: become_user is defined
  become: true
  tags:
    - docker

# TODO(thraneh): implement http proxy support
# https://stackoverflow.com/questions/23111631/cannot-download-docker-images-behind-a-proxy
