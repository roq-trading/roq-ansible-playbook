---

- block:

  - name: create directories
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ directory_config.usr_local_etc }}/grafana"
      - "{{ directory_config.usr_local_etc }}/grafana/provisioning"
      - "{{ directory_config.usr_local_etc }}/grafana/provisioning/dashboards"
      - "{{ directory_config.usr_local_etc }}/grafana/provisioning/datasources"
      - "{{ directory_config.var_lib }}/grafana"
      - "{{ directory_config.var_lib }}/grafana/dashboards"
    notify:
    - restart grafana

  - name: provision datasources
    template:
      src: "templates/datasources.yml"
      dest: "{{ directory_config.usr_local_etc }}/grafana/provisioning/datasources/all.yml"
      owner: root
      group: root
      mode: 0644
    notify:
    - restart grafana

  - name: provision dashboards (common)
    copy:
      src: "files/{{ item }}"
      dest: "/var/lib/grafana/dashboards/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items:
      - "roq-dashboard.json"
    notify:
    - restart grafana
  
  - name: provision dashboards
    template:
      src: "templates/dashboards.yml"
      dest: "{{ directory_config.usr_local_etc }}/grafana/provisioning/dashboards/all.yml"
      owner: root
      group: root
      mode: 0644
    notify:
    - restart grafana

  - name: pull docker image
    docker_image:
      name: "{{ docker_registry_prefix | default('') }}{{ grafana_config.docker.name }}"
      tag: "{{ grafana_config.docker.tag }}"
      source: pull
      force_source: true
      force_tag: true
    notify:
    - restart grafana
  
  - name: create systemd service
    template:
      src: "templates/grafana.service"
      dest: "/etc/systemd/system/grafana.service"
      owner: root
      group: root
      mode: 0644
    register: grafana_service
    notify:
    - restart grafana
  
  - name: enable the grafana service
    systemd:
      name: "grafana.service"
      state: restarted
      enabled: true
      daemon_reload: true
    when: grafana_service.changed

  - name: create shell script
    template:
      src: "templates/{{ item }}"
      dest: "{{ directory_config.usr_local_bin }}/{{ item }}"
      owner: "{{ roq_user }}"
      mode: 0755
    with_items:
      - "grafana-backup"

  - name: define list of systemd services
    set_fact:
      systemd_services:
      - 'grafana-backup.service'

  - name: define list of systemd timers
    set_fact:
      systemd_timers:
      - 'grafana-backup.timer'

  - name: define list of systemd units
    set_fact:
      systemd_units:
      - '{{ systemd_services }} + {{ systemd_timers }}'

  - name: create systemd units
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"

  - name: disable systemd services
    systemd:
      name: "{{ item }}"
      enabled: false
      daemon_reload: true
    with_items: "{{ systemd_services }}"

  - name: enable and start systemd timers
    systemd:
      name: "{{ item }}"
      enabled: true
      state: started
      daemon_reload: true
    with_items: "{{ systemd_timers }}"
  
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - grafana
