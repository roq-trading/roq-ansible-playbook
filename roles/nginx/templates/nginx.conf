log_format realip '$http_x_real_ip - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

{% if 'cicd' in groups %}
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream gogs {
  server gogs.service:{{ gogs.http_port }} max_fails=0;
}

upstream teamcity {
  server teamcity-server.service:{{ teamcity.port }} max_fails=0;
}

{% endif %}
{% if 'trading' in groups %}
upstream grafana {
  server grafana.service:{{ grafana.port }} max_fails=0;
}

upstream prometheus {
  server prometheus.service:{{ prometheus.port }} max_fails=0;
}

{% endif %}
server {

  access_log /dev/stdout realip;

  listen {{ nginx_listen }}:{{ nginx_config.http_port }};

  location / {
    root /var/www/html;
    try_files $uri $uri/ $uri/index.html =404;
  }

{% if 'trading' in groups %}
  location /prometheus/ {
    proxy_set_header Accept-Encoding "";
    proxy_pass http://prometheus;
    proxy_set_header Host $http_host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /grafana/ {
    proxy_pass http://grafana/;
    proxy_set_header Host $host;
  }

{% endif %}
{% if 'cicd' in groups %}
  location /gogs/ {
    proxy_pass          http://gogs/;
    client_max_body_size 1G;
  }

  location /teamcity {
    proxy_pass          http://teamcity/teamcity;
    proxy_http_version  1.1;
    proxy_set_header    Host $host;
    proxy_set_header    X-Forwarded-Host $http_host;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Forwarded-For $remote_addr;
    proxy_set_header    Upgrade $http_upgrade;
    proxy_set_header    Connection $connection_upgrade;
  }

{% endif %}
  location /metrics/ {
    proxy_pass http://unix:${uri}_metrics.sock:/metrics${is_args}${args};
  }

}
