---

- name: combine user configuration with defaults
  set_fact:
    roq_clickhouse_config: >
        {{ roq_clickhouse_defaults | combine(roq_clickhouse | default({}), recursive=True) }}
    cacheable: true
  tags:
    - always

- name: configuration (debug)
  debug:
    var: config
    verbosity: 1
  tags:
    - always

- name: shorter variable name for config
  set_fact:
    config: "{{ roq_clickhouse_config }}"
  tags:
    - roq-clickhouse

- block:

  - name: create required directories
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ roq_user }}"
      # group: "{{ roq_user }}"
      mode: 0755
    with_items:
      - "{{ directory_config.var_lib }}/roq"
      - "{{ directory_config.var_lib }}/roq/data"
      - "{{ directory_config.usr_local_etc }}/roq-clickhouse"

  - name: create config
    template:
      src: "templates/{{ item }}"
      dest: "{{ directory_config.usr_local_etc }}/roq-clickhouse/{{ item }}"
      owner: "{{ roq_user }}"
      # group: "{{ roq_user }}"
      mode: 0640
    with_items:
      - "flags.cfg"

  - name: create shell script
    template:
      src: "templates/roq-clickhouse"
      dest: "{{ directory_config.usr_local_bin }}/roq-clickhouse"
      owner: "{{ roq_user }}"
      # group: "{{ roq_user }}"
      mode: 0755

  - name: check previous version
    shell: '{{ directory_config.opt }}/conda/bin/conda list -f roq-clickhouse | sed -n "s/^roq-clickhouse\s*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p"'
    register: previous_version
    changed_when: false

  - name: install conda package
    shell: "{{ directory_config.opt }}/conda/bin/conda install -y -n base \
      roq-clickhouse{{ '' if config.version == 'latest' else '==%s'|format(config.version) }}"
    changed_when: false

  - name: check current version
    shell: '{{ directory_config.opt }}/conda/bin/conda list -f roq-clickhouse | sed -n "s/^roq-clickhouse\s*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p"'
    register: current_version
    changed_when: "current_version.stdout != previous_version.stdout"

  when: "'roq_clickhouse' in group_names"
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - roq-clickhouse

##############
### SERVER ###
##############

- block:

  - name: docker pull images
    docker_image:
      name: "{{ docker_registry_prefix | default('') }}{{ config.docker.name }}"
      tag: "{{ config.version }}"
      source: pull
      force_source: true
      force_tag: true
    when: config.docker.use

  - name: define list of systemd units
    set_fact:
      systemd_units:
      - 'roq-clickhouse.service'

  - name: create systemd units
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"

  - name: enable systemd units
    systemd:
      name: "{{ item }}"
      enabled: false
      daemon_reload: true
    with_items: "{{ systemd_units }}"

  when: become_user is defined and 'roq_clickhouse' in group_names
  become: true
  tags:
    - roq-clickhouse
