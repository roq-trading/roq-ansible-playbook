---

##############
### REDHAT ###
##############

- block:
  
  - name: get kernel release version
    shell: "uname -r"
    ignore_errors: true
    register: kernel_release_version
  
  - name: install build dependencies
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
    - "kernel-devel-uname-r == {{ kernel_release_version.stdout }}"
    - "@development"

  when: ansible_os_family == "RedHat"
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - onload
  
##############
### COMMON ###
##############

- block:
  
  - name: check driver
    shell: "lsmod | grep ^onload"
    register: onload_driver
    failed_when: onload_driver.rc > 1
    changed_when: onload_driver.rc == 1
  
  - name: check if package already has been downloaded
    stat:
      path: "/opt/openonload-{{ onload_ver }}.tgz"
    register: onload_package
  
  - name: download package
    when: not onload_package.stat.exists and onload_driver is changed
    get_url:
      url: "http://www.openonload.org/download/openonload-{{ onload_ver }}.tgz"
      dest: "/opt"
      owner: root
      mode: 0644
      timeout: 300
  
  - name: extract package
    when: onload_driver is changed
    unarchive:
      remote_src: true
      src: "/opt/openonload-{{ onload_ver }}.tgz"
      dest: "/tmp"
    register: onload_source
  
  - name: check uninstall manifest
    stat:
      path: "/usr/libexec/onload/uninstall_manifest"
    register: onload_uninstall
  
  - name: uninstall old driver
    when: onload_uninstall.stat.exists and onload_source is changed
    command: "/tmp/openonload-{{ onload_ver }}/scripts/onload_misc/onload_uninstall"
  
  - name: install new driver
    when: onload_source is changed
    command: "/tmp/openonload-{{ onload_ver }}/scripts/onload_install"
  
  - name: reload driver
    when: onload_source is changed
    command: "/tmp/openonload-{{ onload_ver }}/scripts/onload_tool reload"

  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - onload
