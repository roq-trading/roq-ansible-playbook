[Unit]
Description=roq-kafka adapter
After=network-online.target

[Service]
{% if config.docker.use %}
TimeoutStartSec=0
ExecStart=/usr/bin/docker run --rm --name %n -i \
  --network roq-network \
  --volume {{ (directory_config.var_lib + '/roq/data') | roq_realpath }}:/var/lib/roq/data \
  --volume {{ (directory_config.usr_local_etc + '/roq-kafka') | roq_realpath }}:/usr/local/etc/roq-kafka \
  --env ROQ_v={{ config.logging.verbosity }} \
  {{ docker_registry_prefix | default('') }}{{ config.docker.name }}:{{ config.version }} \
  --flagfile "/usr/local/etc/roq-kafka/flags.cfg" \
  "/var/lib/roq/data"
{% else %}
User={{ roq_user }}
Group={{ roq_user }}
UMask=0000
# Restart=on-abnormal
Environment="ROQ_v={{ config.logging.verbosity }}"
ExecStart={{ (directory_config.opt + '/conda/bin/roq-kafka') | roq_realpath }} \
  --flagfile "{{ (directory_config.usr_local_etc + '/roq-kafka/flags.cfg') | roq_realpath }}" \
  "{{ (directory_config.var_lib + '/roq/data') | roq_realpath }}"
{% endif %}

[Install]
WantedBy=multi-user.target
