---

- block:

  - name: create directories
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
    with_items:
    - "{{ root }}/var/lib/nexus"
    notify:
    - restart nexus

  - name: pull docker image
    docker_image:
      name: "{{ docker_registry_prefix | default('') }}{{ nexus.docker.name }}"
      tag: "{{ nexus.docker.tag }}"
      source: pull
      force_source: true
      force_tag: true
    notify:
    - restart nexus

  - name: create systemd service
    template:
      src: "templates/nexus.service"
      dest: "/etc/systemd/system/nexus.service"
      owner: root
      group: root
      mode: 0644
    register: nexus_service

  - name: enable the nexus service
    systemd:
      name: "nexus.service"
      state: restarted
      enabled: true
      daemon_reload: true
    when: nexus_service.changed

  - name: create scripts
    template:
      src: "templates/{{ item }}"
      dest: "{{ root }}/usr/local/bin/{{ item }}"
      owner: "{{ roq_user }}"
      mode: 0750
    with_items:
      - "nexus-backup.sh"

  - name: define list of systemd services
    set_fact:
      systemd_services:
      - 'nexus-backup.service'

  - name: define list of systemd timers
    set_fact:
      systemd_timers:
      - 'nexus-backup.timer'

  - name: define list of systemd units
    set_fact:
      systemd_units:
      - '{{ systemd_services }} + {{ systemd_timers }}'

  - name: create systemd units
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"

  - name: enable systemd units
    systemd:
      name: "{{ item }}"
      enabled: true
      daemon_reload: true
    with_items: "{{ systemd_units }}"

  - name: start systemd timers
    systemd:
      name: "{{ item }}"
      state: started
    with_items: "{{ systemd_timers }}"

  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - nexus
