---

- name: detect owner
  set_fact:
    user: "{{ user if roq_user is defined else ansible_user_id }}"
  tags:
    - roq-femas

- name: combine configuration with defaults
  set_fact:
    femas_config: '{{ femas_defaults | combine(femas | default({})) }}'
  tags:
    - roq-femas

- block:

  - name: create required directories
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0770
    with_items:
      - "{{ root }}/etc/roq"
      - "{{ root }}/etc/roq/femas"
      - "{{ root }}/var/log/roq"
      - "{{ root }}/var/run/roq"
      - "{{ root }}/var/run/roq/femas"

  - name: create run script
    template:
      src: "templates/roq-femas.sh"
      dest: "{{ root }}/usr/local/bin/roq-femas.sh"
      owner: "{{ user }}"
      mode: 0750
  
  - name: create config files
    template:
      src: "templates/{{ item }}"
      dest: "{{ root }}/etc/roq/femas/{{ item }}"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0640
    with_items:
      - "master.conf"
      - "users.conf"
      - "symbols.conf"
      - "accounts.conf"
      - "trader.conf"
      - "md_user.conf"
      - "datafeed.conf"
      - "order_templates.conf"
      - "variables.conf"
      - "license.conf"

  - name: install the roq-femas conda package
    shell: "{{ root }}/miniconda/bin/conda install -y -n base roq-femas{{ '' if femas_config.version == 'latest' else '==%s'|format(femas_config.version) }}"
  
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - roq-femas

##############
### SERVER ###
##############

- block:

  - name: docker pull images
    docker_image:
      name: "{{ docker_registry_prefix | default('') }}{{ femas_config.docker.name }}"
      tag: "{{ femas_config.version }}"
      force: true
      http_timeout: 600

  - name: define list of systemd services
    set_fact:
      systemd_services:
      - 'roq-femas.service'
      - 'roq-femas-stop.service'

  - name: define list of systemd timers
    set_fact:
      systemd_timers:
      - 'roq-femas.timer'
      - 'roq-femas-stop.timer'

  - name: define list of systemd units
    set_fact:
      systemd_units:
      - '{{ systemd_services }} + {{ systemd_timers }}'

  - name: create systemd units
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"

  - name: enable systemd units
    systemd:
      name: "{{ item }}"
      enabled: true
      daemon_reload: true
    with_items: "{{ systemd_units }}"

  - name: start systemd timers
    systemd:
      name: "{{ item }}"
      state: started
    with_items: "{{ systemd_timers }}"

  when: "'roq_femas' in group_names"
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - roq-femas

#############################
### WORKAROUND FOR ROQ-11 ###
#############################

- block:

  - name: create directories
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items:
      - "{{ root }}/opt/ansible"
      - "{{ root }}/opt/ansible/docker"
      - "{{ root }}/opt/ansible/docker/roq-femas-bridge"

  - name: create dockerfile
    template:
      src: "templates/Dockerfile"
      dest: "/opt/ansible/docker/roq-femas-bridge/Dockerfile"

  - name: build customized agent
    docker_image:
      name: "roq-femas-bridge"
      tag: "latest"
      force: true
      path: "/opt/ansible/docker/roq-femas-bridge"

  - name: define list of systemd units needed to bridge tcp into docker network
    set_fact:
      workaround_services:
      - "roq-femas-unix-to-tcp.service"

  - name: create systemd units for bridging tcp into docker network
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ workaround_services }}"

  - name: enable systemd units for bridging tcp into docker network
    systemd:
      name: "{{ item }}"
      enabled: true
      daemon_reload: true
    with_items: "{{ workaround_services }}"

  - name: start systemd units for bridging tcp into docker network
    systemd:
      name: "{{ item }}"
      state: started
    with_items: "{{ workaround_services }}"

  - name: ROQ-11 workaround (clean-up) -- check if service exists
    stat:
      path: "/etc/systemd/system/roq-femas-tcp-to-unix.service"
    register: roq_11_service

  - name: ROQ-11 workaround (clean-up) -- stop service
    systemd:
      name: "/etc/systemd/system/roq-femas-tcp-to-unix.service"
      state: stopped
    when: roq_11_service.stat.exists

  - name: ROQ-11 workaround (clean-up) -- remove service
    file:
      name: "/etc/systemd/system/roq-femas-tcp-to-unix.service"
      state: absent
    when: roq_11_service.stat.exists

  - name: ROQ-11 workaround (clean-up) -- systemctl daemon-reloead
    systemd:
      daemon_reload: true
    when: roq_11_service.stat.exists

  when: "'roq_femas' in group_names and not femas_use_docker"
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - roq-femas
