---

- name: detect owner
  set_fact:
    user: "{{ user if roq_user is defined else ansible_user_id }}"
  tags:
    - femas

- name: combine configuration with defaults
  set_fact:
    femas_config: '{{ femas_defaults | combine(femas | default({})) }}'
  tags:
    - femas

- block:

  - name: create required directories
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0770
    with_items:
      - "{{ root }}/etc/roq"
      - "{{ root }}/etc/roq/femas"
      - "{{ root }}/var/log/roq"
      - "{{ root }}/var/run/roq"
      - "{{ root }}/var/run/roq/femas"

  - name: create run script
    template:
      src: "templates/roq-femas.sh"
      dest: "{{ root }}/usr/local/bin/roq-femas.sh"
      owner: "{{ user }}"
      mode: 0750
  
  - name: create config files
    template:
      src: "templates/{{ item }}"
      dest: "{{ root }}/etc/roq/femas/{{ item }}"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0640
    with_items:
      - "master.conf"
      - "users.conf"
      - "symbols.conf"
      - "accounts.conf"
      - "trader.conf"
      - "md_user.conf"
      - "datafeed.conf"
      - "order_templates.conf"
      - "variables.conf"
      - "license.conf"

  - name: install the roq-femas conda package
    shell: "{{ root }}/miniconda/bin/conda install -y -n base roq-femas"
  
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - femas

##############
### SERVER ###
##############

- block:

  - name: docker pull images
    docker_image:
      name: "roqtrading/roq-femas"
      tag: "latest"
      http_timeout: 300

  - name: define list of systemd units
    set_fact:
      systemd_units:
      - 'roq-femas.service'
      - 'roq-femas.timer'
      - 'roq-femas-stop.service'
      - 'roq-femas-stop.timer'

  - name: create systemd units
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"

  - name: enable the systemd units
    systemd:
      name: "{{ item }}"
      state: started
      enabled: true
      daemon_reload: true
    with_items: "{{ systemd_units }}"

  when: "'server' in group_names"
  become: "{{ 'true' if become_user is defined else 'false' }}"
  tags:
    - femas
