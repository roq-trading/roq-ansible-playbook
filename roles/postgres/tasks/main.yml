---

- name: detect owner
  set_fact:
    user: "{{ user if roq_user is defined else ansible_user_id }}"
  tags:
    - postgres

- block:

  - name: create directories
    file:
      path: "{{ item }}"
      state: directory
    with_items:
    - "{{ root }}/var/lib/postgres"
    - "{{ root }}/var/run/postgres"
    notify:
    - restart postgres

  - name: pull docker image
    docker_image:
      name: "{{ docker_registry_prefix | default('') }}{{ postgres.docker.name }}"
      tag: "{{ postgres.docker.tag }}"
      source: pull
      force_tag: true
      build:
        http_timeout: 300

  - name: create systemd service
    template:
      src: "templates/postgres.service"
      dest: "/etc/systemd/system/postgres.service"
      owner: root
      group: root
      mode: 0644
    register: postgres_service

  - name: enable the postgres service
    systemd:
      name: "postgres.service"
      state: restarted
      enabled: true
      daemon_reload: true
    when: postgres_service.changed

  - name: create scripts
    template:
      src: "templates/{{ item }}"
      dest: "{{ root }}/usr/local/bin/{{ item }}"
      owner: "{{ user }}"
      mode: 0750
    with_items:
      - "psql"
      - "pg_dump"
      - "pg_dumpall"
      - "pg_restore"
      - "postgres-backup.sh"

  - name: define list of systemd services
    set_fact:
      systemd_services:
      - 'postgres-backup.service'

  - name: define list of systemd timers
    set_fact:
      systemd_timers:
      - 'postgres-backup.timer'

  - name: define list of systemd units
    set_fact:
      systemd_units:
      - '{{ systemd_services }} + {{ systemd_timers }}'

  - name: create systemd units
    template:
      src: "templates/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"

  - name: enable systemd units
    systemd:
      name: "{{ item }}"
      enabled: true
      daemon_reload: true
    with_items: "{{ systemd_units }}"

  - name: start systemd timers
    systemd:
      name: "{{ item }}"
      state: started
    with_items: "{{ systemd_timers }}"

# required by psycopg2

  - name: install libpq-dev (debian)
    apt:
      name: "libpq-dev"
      state: present
    when: ansible_os_family == "Debian"

  - name: install libpq-devel (redhat)
    yum:
      name: "libpq-devel"
      state: present
    when: ansible_os_family == "RedHat"

# so we later can use ansible's postgresql_db command

  - name: pip install psycopg2
    pip:
      name: "psycopg2"
      state: latest

  when: become_user is defined
  become: true
  tags:
    - postgres
